{"version":3,"file":"chunks/2407.js","mappings":"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","sources":["webpack://@projuris/justto-web/./src/components/dialogs/EngagementLimitDialog.vue","webpack://@projuris/justto-web/src/components/dialogs/EngagementLimitDialog.vue","webpack://@projuris/justto-web/./src/components/dialogs/EngagementLimitDialog.vue?cc19","webpack://@projuris/justto-web/./src/components/dialogs/EngagementLimitDialog.vue?2e90","webpack://@projuris/justto-web/./src/components/dialogs/EngagementLimitDialog.vue?3467","webpack://@projuris/justto-web/./src/components/dialogs/EngagementLimitDialog.vue?8836"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('el-dialog',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.isLoading),expression:\"isLoading\"}],attrs:{\"title\":\"Entre em contato por telefone\",\"visible\":_vm.dialogVisible,\"show-close\":false,\"close-on-click-modal\":false,\"close-on-press-escape\":false,\"custom-class\":\"engagement-limit-dialog\",\"width\":\"auto\",\"center\":\"\",\"append-to-body\":\"\",\"destroy-on-close\":\"\"},on:{\"update:visible\":function($event){_vm.dialogVisible=$event}}},[_c('div',{staticClass:\"engagement-limit__content\"},[_c('el-alert',{staticClass:\"engagement-limit__alert\",attrs:{\"title\":\"Recomendação\",\"type\":\"info\",\"closable\":false,\"center\":\"\"}},[_c('p',[_vm._v(\" Já executamos várias tentativas automáticas de contato, \"),_c('br'),_vm._v(\" continuaremos tentando via e-mail. \"),_c('br'),_c('br'),_vm._v(\" Porém, recomendamos que tente realizar ligações telefonicas! \")])]),_c('h3',{staticClass:\"engagement-limit__label\"},[_vm._v(\" Contatos disponíveis: \")]),_vm._l((_vm.summarizedPartyContacts),function(contact){return _c('div',{directives:[{name:\"show\",rawName:\"v-show\",value:((contact.phones || []).length > 0),expression:\"(contact.phones || []).length > 0\"}],key:`party#${contact.id}`,staticClass:\"engagement-limit__content-item\"},[_c('el-checkbox',{staticClass:\"engagement-limit__content-item__checkbox\",attrs:{\"value\":_vm.isAllCheck(contact.id),\"indeterminate\":_vm.isIndeterminate(contact.id) && !_vm.isAllCheck(contact.id)},on:{\"change\":function($event){return _vm.handleCheckAllChange(contact.id)}}},[_c('div',[_vm._v(\" \"+_vm._s(contact.name)+\" (\"+_vm._s(_vm._f(\"capitalize\")(_vm.translatedPartyType(contact)))+\") \")])]),_c('el-checkbox-group',{model:{value:(_vm.toCall),callback:function ($$v) {_vm.toCall=$$v},expression:\"toCall\"}},_vm._l(((contact.phones || [])),function(phone){return _c('el-checkbox',{key:`phone#${phone.id}`,attrs:{\"label\":phone.id}},[_vm._v(\" \"+_vm._s(_vm._f(\"phoneNumber\")(phone.number))+\" \")])}),1)],1)})],2),_c('span',{staticClass:\"dialog-footer\",attrs:{\"slot\":\"footer\"},slot:\"footer\"},[_c('el-button',{attrs:{\"type\":\"secondary\",\"size\":\"mini\"},on:{\"click\":function($event){_vm.dialogVisible = false}}},[_vm._v(\" Ignorar \")]),_c('el-button',{attrs:{\"type\":\"primary\",\"size\":\"mini\",\"disabled\":!_vm.toCall.length},on:{\"click\":_vm.handlemMakeCall}},[_vm._v(\" Ligar \"+_vm._s(_vm.toCall.length ? `para ${_vm.toCall.length} contato(s)` : '')+\" \")]),_c('br'),_c('br'),(_vm.toCall.length > 1)?_c('sub',[_vm._v(\" *Os contatos seráo adicionados à fila de ligações, \"),_c('br'),_vm._v(\" que ira executar chamadas para todos \"),_c('br'),_vm._v(\" os contatos selecionados em sequência. \")]):_vm._e()],1)])\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <el-dialog\n    v-loading=\"isLoading\"\n    title=\"Entre em contato por telefone\"\n    :visible.sync=\"dialogVisible\"\n    :show-close=\"false\"\n    :close-on-click-modal=\"false\"\n    :close-on-press-escape=\"false\"\n    custom-class=\"engagement-limit-dialog\"\n    width=\"auto\"\n    center\n    append-to-body\n    destroy-on-close\n  >\n    <div class=\"engagement-limit__content\">\n      <el-alert\n        title=\"Recomendação\"\n        class=\"engagement-limit__alert\"\n        type=\"info\"\n        :closable=\"false\"\n        center\n      >\n        <p>\n          Já executamos várias tentativas automáticas de contato,\n          <br>\n          continuaremos tentando via e-mail.\n          <br>\n          <br>\n          Porém, recomendamos que tente realizar ligações telefonicas!\n        </p>\n      </el-alert>\n\n      <h3 class=\"engagement-limit__label\">\n        Contatos disponíveis:\n      </h3>\n\n      <div\n        v-for=\"contact of summarizedPartyContacts\"\n        v-show=\"(contact.phones || []).length > 0\"\n        :key=\"`party#${contact.id}`\"\n        class=\"engagement-limit__content-item\"\n      >\n        <el-checkbox\n          :value=\"isAllCheck(contact.id)\"\n          :indeterminate=\"isIndeterminate(contact.id) && !isAllCheck(contact.id)\"\n          class=\"engagement-limit__content-item__checkbox\"\n          @change=\"handleCheckAllChange(contact.id)\"\n        >\n          <div>\n            {{ contact.name }} ({{ translatedPartyType(contact) | capitalize }})\n          </div>\n        </el-checkbox>\n\n        <el-checkbox-group v-model=\"toCall\">\n          <el-checkbox\n            v-for=\"phone of (contact.phones || [])\"\n            :key=\"`phone#${phone.id}`\"\n            :label=\"phone.id\"\n          >\n            {{ phone.number | phoneNumber }}\n          </el-checkbox>\n        </el-checkbox-group>\n      </div>\n    </div>\n\n    <span\n      slot=\"footer\"\n      class=\"dialog-footer\"\n    >\n      <el-button\n        type=\"secondary\"\n        size=\"mini\"\n        @click=\"dialogVisible = false\"\n      >\n        Ignorar\n      </el-button>\n\n      <el-button\n        type=\"primary\"\n        size=\"mini\"\n        :disabled=\"!toCall.length\"\n        @click=\"handlemMakeCall\"\n      >\n        Ligar {{ toCall.length ? `para ${toCall.length} contato(s)` : '' }}\n      </el-button>\n\n      <br><br>\n\n      <sub v-if=\"toCall.length > 1\">\n        *Os contatos seráo adicionados à fila de ligações,\n        <br>\n        que ira executar chamadas para todos\n        <br>\n        os contatos selecionados em sequência.\n      </sub>\n    </span>\n  </el-dialog>\n</template>\n\n<script>\nimport { mapActions, mapGetters, mapMutations } from 'vuex'\n\nexport default {\n  props: {\n    disputeId: {\n      type: Number,\n      required: true\n    }\n  },\n\n  data: () => ({\n    isLoading: false,\n    toCall: []\n  }),\n\n  computed: {\n    ...mapGetters({\n      engagementLimit: 'getEngagementLimit',\n      isRecovery: 'isWorkspaceRecovery',\n      appInstance: 'getAppInstance',\n      dispute: 'dispute'\n    }),\n\n    dialogVisible: {\n      get() {\n        return this.engagementLimit\n      },\n\n      set(value) {\n        this.setEngageLimit({ value: String(value) })\n      }\n    },\n\n    summarizedPartyContacts() {\n      return (this.dispute.disputeRoles || []).filter(({ party }) => party === 'CLAIMANT').map(({ id, name, phones, party, roles }) => {\n        return {\n          id,\n          name,\n          party,\n          roles,\n          phones: phones.filter(({ archived, blocked, isMain, isValid }) => (!archived && !blocked && isMain && isValid))\n        }\n      })\n    },\n\n    countContactsSelected() {\n      return (contactId) => {\n        return (this.summarizedPartyContacts.find(({ id }) => {\n          return id === contactId\n        })?.phones || []).filter(({ id }) => {\n          return this.toCall.includes(id)\n        }).length\n      }\n    },\n\n    isIndeterminate() {\n      return (contactId) => this.countContactsSelected(contactId) > 0\n    },\n\n    isAllCheck: {\n      get() {\n        return (contactId) => {\n          const length = (this.summarizedPartyContacts.find(({ id }) => id === contactId)?.phones || []).length\n\n          return length > 0 && length === this.countContactsSelected(contactId)\n        }\n      }\n    },\n\n    translatedPartyType() {\n      return (contact) => {\n        let role = 'UNKNOWN'\n\n        if (contact.roles.includes('PARTY')) {\n          if (contact.roles.includes('LAWYER')) {\n            role = 'OWN_CAUSE'\n          } else {\n            role = 'PARTY'\n          }\n        } else if (contact.roles.includes('LAWYER')) {\n          role = 'LAWYER'\n        }\n\n        return this.$tc(`roles.${role}.CLAIMANT`, this.isRecovery)\n      }\n    }\n  },\n\n  watch: {\n    engagementLimit: {\n      handler: 'fetchData',\n      deep: true\n    }\n  },\n\n  methods: {\n    ...mapActions({\n      getDispute: 'getDispute',\n      addCall: 'addCall'\n    }),\n\n    ...mapMutations({ setEngageLimit: 'handleEngageLimit' }),\n\n    fetchData(visible) {\n      if (visible) {\n        this.isLoading = true\n\n        this.getDispute(this.disputeId).finally(() => {\n          this.isLoading = false\n        })\n      }\n    },\n\n    handleCheckAllChange(contactId) {\n      const contactPhones = (this.summarizedPartyContacts.find(({ id }) => id === contactId)?.phones || []).map(({ id }) => id)\n\n      const haveInclude = contactPhones.filter(id => this.toCall.includes(id)).length > 0\n      const haveAllInclude = contactPhones.filter(id => this.toCall.includes(id)).length === contactPhones.length\n\n      if (!haveAllInclude && !haveInclude) {\n        this.toCall = [\n          ...this.toCall,\n          ...contactPhones\n        ]\n      } else if (!haveAllInclude && haveInclude) {\n        this.toCall = [\n          ...this.toCall,\n          ...(contactPhones.filter(id => !this.toCall.includes(id)))\n        ]\n      } else {\n        this.toCall = [...this.toCall.filter(id => !contactPhones.includes(id))]\n      }\n    },\n\n    handlemMakeCall() {\n      this.toCall.forEach(phoneId => {\n        const role = (this.dispute?.disputeRoles || []).find(role => {\n          const phoneIds = (role?.phones || []).map(({ id }) => id)\n          return phoneIds.includes(phoneId)\n        })\n\n        const toRoleId = role.id\n        const toRoleName = role.name\n        const number = role?.phones.find(({ id }) => id === phoneId)?.number\n\n        const callVM = {\n          disputeId: Number(this.disputeId),\n          disputeStatus: this.dispute.status,\n          toRoleId,\n          toRoleName,\n          number,\n          appInstance: this.appInstance,\n          contacts: {\n            emails: role?.emails,\n            phones: role?.phones\n          }\n        }\n\n        this.addCall(callVM)\n      })\n\n      this.dialogVisible = false\n    }\n  }\n}\n</script>\n\n<style lang=\"scss\">\n.engagement-limit-dialog {\n  .el-dialog__body {\n    .engagement-limit__content {\n      display: flex;\n      flex-direction: column;\n      gap: 16px;\n\n      .engagement-limit__label {\n        margin: 0;\n        font-weight: 600;\n      }\n\n      .engagement-limit__content-item {\n        display: flex;\n        flex-direction: column;\n        gap: 8px;\n\n        .el-checkbox-group {\n          display: flex;\n          flex-direction: column;\n          padding-left: 16px;\n        }\n      }\n    }\n  }\n}\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EngagementLimitDialog.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EngagementLimitDialog.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EngagementLimitDialog.vue?vue&type=template&id=60959f5c&\"\nimport script from \"./EngagementLimitDialog.vue?vue&type=script&lang=js&\"\nexport * from \"./EngagementLimitDialog.vue?vue&type=script&lang=js&\"\nimport style0 from \"./EngagementLimitDialog.vue?vue&type=style&index=0&id=60959f5c&prod&lang=scss&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","// Imports\nimport ___CSS_LOADER_API_SOURCEMAP_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/sourceMaps.js\";\nimport ___CSS_LOADER_API_IMPORT___ from \"../../../node_modules/css-loader/dist/runtime/api.js\";\nvar ___CSS_LOADER_EXPORT___ = ___CSS_LOADER_API_IMPORT___(___CSS_LOADER_API_SOURCEMAP_IMPORT___);\n// Module\n___CSS_LOADER_EXPORT___.push([module.id, \".engagement-limit-dialog .el-dialog__body .engagement-limit__content{display:flex;flex-direction:column;gap:16px}.engagement-limit-dialog .el-dialog__body .engagement-limit__content .engagement-limit__label{margin:0;font-weight:600}.engagement-limit-dialog .el-dialog__body .engagement-limit__content .engagement-limit__content-item{display:flex;flex-direction:column;gap:8px}.engagement-limit-dialog .el-dialog__body .engagement-limit__content .engagement-limit__content-item .el-checkbox-group{display:flex;flex-direction:column;padding-left:16px}\", \"\",{\"version\":3,\"sources\":[\"webpack://./src/components/dialogs/EngagementLimitDialog.vue\"],\"names\":[],\"mappings\":\"AAGI,qEACE,YAAA,CACA,qBAAA,CACA,QAAA,CAEA,8FACE,QAAA,CACA,eAAA,CAGF,qGACE,YAAA,CACA,qBAAA,CACA,OAAA,CAEA,wHACE,YAAA,CACA,qBAAA,CACA,iBAAA\",\"sourcesContent\":[\"\\n.engagement-limit-dialog {\\n  .el-dialog__body {\\n    .engagement-limit__content {\\n      display: flex;\\n      flex-direction: column;\\n      gap: 16px;\\n\\n      .engagement-limit__label {\\n        margin: 0;\\n        font-weight: 600;\\n      }\\n\\n      .engagement-limit__content-item {\\n        display: flex;\\n        flex-direction: column;\\n        gap: 8px;\\n\\n        .el-checkbox-group {\\n          display: flex;\\n          flex-direction: column;\\n          padding-left: 16px;\\n        }\\n      }\\n    }\\n  }\\n}\\n\"],\"sourceRoot\":\"\"}]);\n// Exports\nexport default ___CSS_LOADER_EXPORT___;\n","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/dist/cjs.js??clonedRuleSet-22.use[1]!../../../node_modules/@vue/vue-loader-v15/lib/loaders/stylePostLoader.js!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-22.use[2]!../../../node_modules/@vue/cli-service/node_modules/postcss-loader/dist/cjs.js??clonedRuleSet-22.use[3]!../../../node_modules/sass-loader/dist/cjs.js??clonedRuleSet-22.use[4]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EngagementLimitDialog.vue?vue&type=style&index=0&id=60959f5c&prod&lang=scss&\");\nif(content.__esModule) content = content.default;\nif(typeof content === 'string') content = [[module.id, content, '']];\nif(content.locals) module.exports = content.locals;\n// add the styles to the DOM\nvar add = require(\"!../../../node_modules/vue-style-loader/lib/addStylesClient.js\").default\nvar update = add(\"c8573212\", content, true, {\"sourceMap\":true,\"shadowMode\":false});"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","isLoading","expression","attrs","dialogVisible","on","$event","staticClass","_v","_l","summarizedPartyContacts","contact","phones","length","key","id","isAllCheck","isIndeterminate","handleCheckAllChange","_s","_f","translatedPartyType","model","toCall","callback","$$v","phone","number","slot","handlemMakeCall","_e","staticRenderFns","props","disputeId","type","Number","required","data","computed","mapGetters","engagementLimit","isRecovery","appInstance","dispute","get","set","setEngageLimit","String","disputeRoles","filter","party","map","roles","archived","blocked","isMain","isValid","countContactsSelected","contactId","find","includes","role","$tc","watch","handler","deep","methods","mapActions","getDispute","addCall","mapMutations","fetchData","visible","finally","contactPhones","haveInclude","haveAllInclude","forEach","phoneId","phoneIds","toRoleId","toRoleName","callVM","disputeStatus","status","contacts","emails","component","___CSS_LOADER_EXPORT___","push","module","content","__esModule","default","locals","exports","add"],"sourceRoot":""}