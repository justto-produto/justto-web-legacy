{"version":3,"file":"chunks/3400.js","mappings":"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","sources":["webpack://@projuris/justto-web/./src/views/main/configurations/partials/EditUser.vue","webpack://@projuris/justto-web/src/views/main/configurations/partials/EditUser.vue","webpack://@projuris/justto-web/./src/views/main/configurations/partials/EditUser.vue?ebe2","webpack://@projuris/justto-web/./src/views/main/configurations/partials/EditUser.vue?7e8f"],"sourcesContent":["var render = function render(){var _vm=this,_c=_vm._self._c;return _c('article',{directives:[{name:\"loading\",rawName:\"v-loading\",value:(_vm.localLoading),expression:\"localLoading\"}],staticClass:\"edit-user-container\"},[_c('el-form',{ref:\"editUserForm\",attrs:{\"model\":_vm.form}},[_c('el-form-item',{attrs:{\"label\":\"Nome\",\"prop\":\"name\"}},[_c('el-input',{model:{value:(_vm.form.name),callback:function ($$v) {_vm.$set(_vm.form, \"name\", $$v)},expression:\"form.name\"}},[_c('span',{staticClass:\"is-pointer\",attrs:{\"slot\":\"append\"},domProps:{\"textContent\":_vm._s('Alterar')},on:{\"click\":function($event){return _vm.editName()}},slot:\"append\"})])],1),_c('el-form-item',{attrs:{\"label\":\"Antiga senha\",\"prop\":\"oldPassword\"}},[_c('el-input',{attrs:{\"type\":\"password\",\"show-password\":\"\"},model:{value:(_vm.form.oldPassword),callback:function ($$v) {_vm.$set(_vm.form, \"oldPassword\", $$v)},expression:\"form.oldPassword\"}})],1),_c('el-row',{attrs:{\"gutter\":12}},[_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"Nova senha\",\"prop\":\"password\"}},[_c('el-input',{attrs:{\"show-password\":\"\",\"type\":\"password\",\"autocomplete\":\"false\"},model:{value:(_vm.form.password),callback:function ($$v) {_vm.$set(_vm.form, \"password\", $$v)},expression:\"form.password\"}})],1)],1),_c('el-col',{attrs:{\"span\":12}},[_c('el-form-item',{attrs:{\"label\":\"Confirmar senha\",\"prop\":\"confirmPassword\"}},[_c('el-input',{attrs:{\"disabled\":!_vm.passwordIsValid,\"show-password\":\"\",\"type\":\"password\",\"autocomplete\":\"false\"},model:{value:(_vm.form.confirmPassword),callback:function ($$v) {_vm.$set(_vm.form, \"confirmPassword\", $$v)},expression:\"form.confirmPassword\"}},[_c('input',{attrs:{\"slot\":\"preppend\"},slot:\"preppend\"}),_c('span',{staticClass:\"is-pointer\",attrs:{\"slot\":\"append\"},domProps:{\"textContent\":_vm._s('Alterar')},on:{\"click\":function($event){return _vm.editPassword()}},slot:\"append\"})])],1)],1)],1),_c('el-form-item',{attrs:{\"label\":\"Telefone de contato\",\"prop\":\"phone\"}},[_c('el-input',{directives:[{name:\"mask\",rawName:\"v-mask\",value:(['### (##) # ####-####',, '## (##) # ####-####', '(##) ####-####', '(##) #####-####']),expression:\"['### (##) # ####-####',, '## (##) # ####-####', '(##) ####-####', '(##) #####-####']\"}],model:{value:(_vm.form.phone),callback:function ($$v) {_vm.$set(_vm.form, \"phone\", $$v)},expression:\"form.phone\"}},[_c('span',{staticClass:\"is-pointer\",attrs:{\"slot\":\"append\"},domProps:{\"textContent\":_vm._s('Alterar')},on:{\"click\":function($event){return _vm.editPhone()}},slot:\"append\"})])],1)],1)],1)\n}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <article\n    v-loading=\"localLoading\"\n    class=\"edit-user-container\"\n  >\n    <el-form\n      ref=\"editUserForm\"\n      :model=\"form\"\n    >\n      <el-form-item\n        label=\"Nome\"\n        prop=\"name\"\n      >\n        <el-input\n          v-model=\"form.name\"\n        >\n          <span\n            slot=\"append\"\n            class=\"is-pointer\"\n            @click=\"editName()\"\n            v-text=\"'Alterar'\"\n          />\n        </el-input>\n      </el-form-item>\n\n      <el-form-item\n        label=\"Antiga senha\"\n        prop=\"oldPassword\"\n      >\n        <el-input\n          v-model=\"form.oldPassword\"\n          type=\"password\"\n          show-password\n        />\n      </el-form-item>\n\n      <el-row :gutter=\"12\">\n        <el-col :span=\"12\">\n          <el-form-item\n            label=\"Nova senha\"\n            prop=\"password\"\n          >\n            <el-input\n              v-model=\"form.password\"\n              show-password\n              type=\"password\"\n              autocomplete=\"false\"\n            />\n          </el-form-item>\n        </el-col>\n\n        <el-col :span=\"12\">\n          <el-form-item\n            label=\"Confirmar senha\"\n            prop=\"confirmPassword\"\n          >\n            <el-input\n              v-model=\"form.confirmPassword\"\n              :disabled=\"!passwordIsValid\"\n              show-password\n              type=\"password\"\n              autocomplete=\"false\"\n            >\n              <input slot=\"preppend\">\n\n              <span\n                slot=\"append\"\n                class=\"is-pointer\"\n                @click=\"editPassword()\"\n                v-text=\"'Alterar'\"\n              />\n            </el-input>\n          </el-form-item>\n        </el-col>\n      </el-row>\n\n      <el-form-item\n        label=\"Telefone de contato\"\n        prop=\"phone\"\n      >\n        <el-input\n          v-model=\"form.phone\"\n          v-mask=\"['### (##) # ####-####',, '## (##) # ####-####', '(##) ####-####', '(##) #####-####']\"\n        >\n          <span\n            slot=\"append\"\n            class=\"is-pointer\"\n            @click=\"editPhone()\"\n            v-text=\"'Alterar'\"\n          />\n        </el-input>\n      </el-form-item>\n    </el-form>\n  </article>\n</template>\n\n<script>\nimport { mapActions, mapGetters } from 'vuex'\nimport { validatePhone } from '@/utils/validations'\n\nexport default {\n  data() {\n    return {\n      localLoading: false,\n      form: {\n        name: '',\n        oldPassword: '',\n        password: '',\n        confirmPassword: '',\n        phone: ''\n      },\n      rules: {\n        phone: [\n          { required: true, message: 'Este campo obrigatório', trigger: 'submit' },\n          { validator: validatePhone, message: 'Telefone inválido', trigger: 'change' }\n        ],\n        password: [\n          { required: true, message: 'Este campo obrigatório', trigger: 'submit' },\n          { min: 6, max: 12, message: 'Este campo deve ter de 6 a 12 caracteres', trigger: 'blur' }\n        ],\n        oldPassword: [\n          { required: true, message: 'Este campo obrigatório', trigger: 'submit' },\n          { min: 6, max: 12, message: 'Este campo deve ter de 6 a 12 caracteres', trigger: 'blur' }\n        ],\n        confirmPassword: [\n          { required: true, message: 'Este campo obrigatório', trigger: 'submit' },\n          { min: 6, max: 12, message: 'Este campo deve ter de 6 a 12 caracteres', trigger: 'blur' }\n        ]\n      }\n    }\n  },\n\n  computed: {\n    ...mapGetters({\n      accountId: 'accountId',\n      id: 'loggedPersonId',\n      name: 'loggedPersonName',\n      hasName: 'loggedPersonHasName',\n      phone: 'loggedPersonPhone'\n    }),\n\n    passwordIsValid() {\n      const length = this.form.password.trim().length\n      return length >= 6 && length <= 12\n    },\n\n    confirmPasswordIsValid() {\n      const length = this.form.confirmPassword.trim().length\n      const equals = this.form.confirmPassword === this.form.password\n      return length >= 6 && length <= 12 && equals\n    }\n  },\n\n  mounted() {\n    Object.assign(this.form, {\n      name: this.hasName ? this.name : '',\n      phone: this.phone?.number || ''\n    })\n    this.$nextTick().then(_ => this.$forceUpdate())\n  },\n\n  methods: {\n    ...mapActions([\n      'setMainPhone',\n      'updatePassword',\n      'changeMemberName',\n      'changeLoggedPersonName',\n      'changeAccountName',\n      'changeLoggedPersonPhone'\n    ]),\n\n    emitClose() {\n      this.localLoading = false\n      this.$emit('close')\n    },\n    editName() {\n      this.localLoading = true\n      this.changeMemberName({\n        updateWorkspace: false,\n        updatePerson: true,\n        accountId: this.accountId,\n        name: this.form.name\n      }).then(() => {\n        this.changeLoggedPersonName(this.form.name)\n        this.changeAccountName(this.form.name)\n        this.$jusSegment('Nome do usuário alterado na edição')\n        this.$jusNotification({\n          title: 'Yay!',\n          message: 'Nome alterado com sucesso.',\n          type: 'success'\n        })\n      }).catch(error => this.$jusNotification({ error })).finally(this.emitClose)\n    },\n\n    editPhone() {\n      this.localLoading = true\n      this.$refs.editUserForm.validateField('phone', hasError => {\n        if (!hasError) {\n          this.setMainPhone({\n            phoneDTO: { number: this.form.phone },\n            personId: this.id\n          }).then(phoneDTO => {\n            this.changeLoggedPersonPhone(phoneDTO)\n            this.$jusNotification({\n              title: 'Yay!',\n              message: 'Telefone de contato alterado com sucesso.',\n              type: 'success'\n            })\n          }).catch(error => {\n            this.$jusNotification({ error })\n          }).finally(this.emitClose)\n        } else {\n          this.localLoading = false\n        }\n      })\n    },\n\n    editPassword() {\n      if (!this.passwordIsValid || !this.confirmPasswordIsValid) return\n\n      this.localLoading = true\n      this.$refs.editUserForm.validate(isValid => {\n        const { password, oldPassword } = this.form\n\n        if (isValid && password !== oldPassword) {\n          this.updatePassword({\n            password, oldPassword\n          }).then(() => {\n            // SEGMENT TRACK\n            this.form.oldPassword = password\n            this.$jusSegment('Senha do usuário alterada')\n            this.$jusNotification({\n              title: 'Yay!',\n              message: 'Senha alterada com sucesso.',\n              type: 'success'\n            })\n          }).catch(error => {\n            this.$jusNotification({ error })\n          }).finally(this.emitClose)\n        } else {\n          this.localLoading = false\n        }\n      })\n    }\n  }\n}\n</script>\n","import mod from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EditUser.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../../node_modules/thread-loader/dist/cjs.js!../../../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40.use[1]!../../../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./EditUser.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./EditUser.vue?vue&type=template&id=b5458d3e&\"\nimport script from \"./EditUser.vue?vue&type=script&lang=js&\"\nexport * from \"./EditUser.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_c","_self","directives","name","rawName","value","localLoading","expression","staticClass","ref","attrs","form","model","callback","$$v","$set","domProps","_s","on","$event","editName","slot","oldPassword","password","passwordIsValid","confirmPassword","editPassword","phone","editPhone","staticRenderFns","data","rules","required","message","trigger","validator","validatePhone","min","max","computed","mapGetters","accountId","id","hasName","length","trim","confirmPasswordIsValid","equals","mounted","Object","assign","number","$nextTick","then","_","$forceUpdate","methods","mapActions","emitClose","$emit","changeMemberName","updateWorkspace","updatePerson","changeLoggedPersonName","changeAccountName","$jusSegment","$jusNotification","title","type","catch","error","finally","$refs","editUserForm","validateField","hasError","setMainPhone","phoneDTO","personId","changeLoggedPersonPhone","validate","isValid","updatePassword","component"],"sourceRoot":""}