build:
  # This references an OpenJDK container from the
  # Docker Hub https://hub.docker.com/_/openjdk/
  # Read more about containers on our dev center
  # https://devcenter.wercker.com/overview-and-core-concepts/containers/
  box: node:latest
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    - script:
      name: Configure project informations
      code: export PROJECT_NAME=justto-web
    - install-packages:
        packages: curl
    - script:
      name: Configure git
      code: git config --global user.name "wercker" && git config --global user.email "dev@justto.com.br"
    - script:
      name: Prepare release branch
      code: |
        git checkout release
        git merge develop --commit -m "Merge com a develop para release"
        printenv
    - script:
        name: Run npm i
        code: |
          npm i
    - script:
        name: Run npm run release
        code: |
          npm run release
          export CURRENT_VERSION=$(node -p "require('./package.json').version")
          echo $CURRENT_VERSION
    - script:
        name: Update tag version
        code: |
          git remote set-url origin https://dev%40justto.com.br:%40bundanc1A@gitlab.com/Justto/front-end/justto-web.git
          git add .
          git commit -m 'Release da versao '${CURRENT_VERSION} || echo 'Nada a commitar.'
          git push origin release
    - internal/docker-build:
      dockerfile: DockerfileWercker
      image-name: gcr.io/justto-ml/$PROJECT_NAME
      tag: stable latest $CURRENT_VERSION
    - internal/docker-push:
      image-name: gcr.io/justto-ml/$PROJECT_NAME
      repository: gcr.io/justto-ml/$PROJECT_NAME
      tag: latest, stable, $CURRENT_VERSION
      username: _json_key
      password: $JUSTTO_ML_KEY
      registry: https://gcr.io
    - script:
      name: Start pipeline to deploy in kubernetes
      code: |
        export payload='{"pipelineId": "5dc18143b7da88a8009460a3","branch": "prod","envVars": [ {"key":"service_name","value":"'$PROJECT_NAME'" }]}'
        echo 'sending: '$payload
        curl  --request POST \
              --url https://app.wercker.com/api/v3/runs/ \
              --header 'Authorization: Bearer a495c40616638e2bf882a68f3ee3db8a451f6604eeae242eb8039d4f8edd06bd' \
              --header 'Content-Type: application/json' \
              --header 'cache-control: no-cache' \
              --data '{"pipelineId": "5dc18143b7da88a8009460a3","branch": "prod", "message": "Deploying latest version to microservice '$PROJECT_NAME':'$CURRENT_VERSION'","envVars": [ {"key":"service_name","value":"'$PROJECT_NAME'" }]}'
test-e2e:
  # Read more about containers on our dev center
  # https://devcenter.wercker.com/overview-and-core-concepts/containers/
  box: node:latest
  # Steps make up the actions in your pipeline
  # Read more about steps on our dev center:
  # https://devcenter.wercker.com/development/steps/
  steps:
    - script:
      name: Configure git
      code: git config --global user.name "wercker" && git config --global user.email "dev@justto.com.br"
    - script:
      name: Pull develop branch
      code: |
        git checkout develop
        git pull origin develop
        printenv
    - internal/docker-build:
        name: Run Test E2E
        dockerfile: Dockerfile-test
        image-name: e2e-test
        tag: e2e-test
